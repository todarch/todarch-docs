version: '3'

services:

  db:
    environment:
      - POSTGRES_USER=${TD_POSTGRES_USER}
      - POSTGRES_PASSWORD=${TD_POSTGRES_PASSWORD}
    networks:
      - internal
      - proxy
    labels:
      - traefik.backend=db
      - traefik.frontend.rule=Host:db.todarch.com
      - traefik.docker.network=proxy
      - traefik.port=5432

  keycloak:
    environment:
      # https://serverfault.com/questions/1000567/keycloak-blank-page-behind-nginx-reverse-proxy
      # when visiting admin console, in case of white screen
      # look in browser's console tab, there is 'Mixed Content:' error
      # make sure that your internal keycloak jboss server is aware of the proxy address
      # /opt/jboss/keycloak/standalone/configuration/standalone.xml
      - PROXY_ADDRESS_FORWARDING=true
      - KEYCLOAK_USER=${TD_KEYCLOAK_USER}
      - KEYCLOAK_PASSWORD=${TD_KEYCLOAK_PASSWORD}
      - DB_DATABASE=${TD_POSTGRES_USER}
      - DB_SCHEMA=keycloak
      - DB_USER=${TD_POSTGRES_USER}
      - DB_PASSWORD=${TD_POSTGRES_PASSWORD}
    networks:
      - internal
      - proxy
    labels:
      - traefik.backend=id
      - traefik.frontend.rule=Host:id.todarch.com
      - traefik.docker.network=proxy
      - traefik.port=8080

  td:
    expose:
      - "8080"
    environment:
      - spring.profiles.active=prod
      - JDBC_DATABASE_URL=${TD_JDBC_URL}
      - JDBC_DATABASE_USERNAME=${TD_FLYWAY_USER}
      - JDBC_DATABASE_PASSWORD=${TD_FLYWAY_PASSWORD}
      - AUTH_SERVER_URL=http://keycloak:8080/auth
    networks:
      - internal
      - proxy
    labels:
      - traefik.backend=td
      - traefik.frontend.rule=Host:td.todarch.com
      - traefik.docker.network=proxy
      - traefik.port=8080

  web:
    networks:
      - internal
      - proxy
    labels:
      - traefik.backend=ui
      - traefik.frontend.rule=Host:app.todarch.com, todarch.com
      - traefik.docker.network=proxy
      - traefik.port=80

  rp:
    image: traefik:1.7.3-alpine
    command: --api --docker  # Enables the web UI and tells Traefik to listen to docker
    ports:
      - "80:80"      # The HTTP port
      - "8080:8080"  # The Web UI (enabled by --api)
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # So that Traefik can listen to the Docker events
      - $PWD/traefik.toml:/traefik.toml
      - $PWD/acme.json:/acme.json
    networks:
      - proxy
    labels:
      - traefik.frontend.rule=Host:rp.todarch.com
      - traefik.port=8080

  wisit-be:
    expose:
      - "8080"
    environment:
      - spring.profiles.active=prod
      - JDBC_DATABASE_URL=${TD_JDBC_URL}
      - JDBC_DATABASE_USERNAME=${TD_FLYWAY_USER}
      - JDBC_DATABASE_PASSWORD=${TD_FLYWAY_PASSWORD}
    networks:
      - internal
      - proxy
    labels:
      - traefik.backend=wisit-be
      - traefik.frontend.rule=Host:wisit-be.todarch.com
      - traefik.docker.network=proxy
      - traefik.port=8080

  wisit-web:
    networks:
      - internal
      - proxy
    labels:
      - traefik.backend=wisit-web
      - traefik.frontend.rule=Host:wisit.todarch.com
      - traefik.docker.network=proxy
      - traefik.port=80

networks:
  proxy: # docker network create proxy for the first time
    external: true
  internal:
    external: false
