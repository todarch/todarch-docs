version: '3'

services:

  # connect db on your local: be sure to have psql client
  # psql --host=localhost --port=5445 --dbname=postgres --username=postgres
  db:
    image: postgres:12.2
    ports:
      - "5445:5432" # change so it will not have conflict with existing psql
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    volumes:
      - db-data:/var/lib/postgresql/data

  keycloak:
    image: jboss/keycloak:9.0.2
    ports:
      - "7007:8080"
    expose:
      - "8080"
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin

  cs: # serves on 8080
    image: todarch/cs
    ports:
      - "7001:8080" # maps 8080 of container to 7001 of host
    expose:
      - "8080" # let other containers access to this service on 8080
    restart: always

  um:
    image: todarch/um
    ports:
      - "7002:8080"
    expose:
      - "8080"
    depends_on:
      - cs
      - db
      - mq
    environment:
      - spring.cloud.config.uri=http://cs:8080
      - JDBC_DATABASE_URL=jdbc:postgresql://db:5432/postgres
      - JDBC_DATABASE_USERNAME=postgres
      - JDBC_DATABASE_PASSWORD=todarchpass
      - RABBITMQ_HOST=mq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
    restart: always

  td:
    image: todarch/td
    ports:
      - "7003:8080"
    expose:
      - "8080"
    depends_on:
      - cs
      - db
    environment:
      - spring.cloud.config.uri=http://cs:8080
      - JDBC_DATABASE_URL=jdbc:postgresql://db:5432/postgres
      - JDBC_DATABASE_USERNAME=postgres
      - JDBC_DATABASE_PASSWORD=todarchpass
    restart: always

  gw:
    image: todarch/gw
    ports:
      - "7004:8080"
    expose:
      - "8080"
    depends_on:
      - um
      - td
    environment:
      - zuul.routes.um.url=http://um:8080
      - zuul.routes.td.url=http://td:8080
    restart: always
    
  web:
    image: todarch/web
    ports:
      - "7006:80" # nginx runs on 80
    expose:
      - "80"
    restart: always

  mq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    expose:
      - "5672"
      - "15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: always

  cm:
    image: todarch/cm
    depends_on:
      - mq
      - cs
    environment:
      - spring.cloud.config.uri=http://cs:8080
      # do not add 'http' ././.rabbitmq/client/Address.java#parseHost#L85
      - RABBITMQ_HOST=mq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - TODARCH_MAIL_PASSWORD=${TODARCH_MAIL_PASSWORD}
    restart: always

  wisit-be:
    image: todarch/wisit-be
    ports:
      - "7010:7010"
    expose:
      - "7010"
    depends_on:
      - db
    environment:
      # override for from container to container access
      - JDBC_DATABASE_URL=jdbc:postgresql://db:5432/postgres
    restart: always
    
  wisit-web:
    image: todarch/wisit-web
    ports:
      - "7011:80" # nginx runs on 80
    expose:
      - "80"
    restart: always

volumes:
  db-data:
