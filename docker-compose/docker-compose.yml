version: '3'

services:

  # connect db on your local: be sure to have psql client
  # psql --host=localhost --port=5445 --dbname=postgres --username=postgres
  db:
    image: postgres:12.2
    ports:
      - "5445:5432" # change so it will not have conflict with existing psql
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    volumes:
      - db-data:/var/lib/postgresql/data

  keycloak:
    image: jboss/keycloak:9.0.2
    ports:
      - "7007:8080"
    expose:
      - "8080"
    depends_on:
      - db
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - DB_ADDR=db # required by entry-point.sh
      - DB_VENDOR=postgres
      - DB_PORT=5432 # from container to container
      - DB_DATABASE=admin
      - DB_SCHEMA=keycloak
      - DB_USER=admin
      - DB_PASSWORD=admin

  td:
    image: todarch/td
    ports:
      - "7003:7003"
    expose:
      - "7003"
    depends_on:
      - db
    environment:
      # override for from container to container access
      - JDBC_DATABASE_URL=jdbc:postgresql://db:5432/postgres
      - AUTH_SERVER_URL=http://keycloak:8080/auth
    restart: always

  web:
    image: todarch/web
    ports:
      - "7006:80" # nginx runs on 80
    expose:
      - "80"
    restart: always

  wisit-be:
    image: todarch/wisit-be
    ports:
      - "7010:7010"
    expose:
      - "7010"
    depends_on:
      - db
    environment:
      # override for from container to container access
      - JDBC_DATABASE_URL=jdbc:postgresql://db:5432/postgres
      - FLICKR_API_KEY=${TD_FLICKR_API_KEY}
    restart: always

  wisit-web:
    image: todarch/wisit-web
    ports:
      - "7011:80" # nginx runs on 80
    expose:
      - "80"
    restart: always

volumes:
  db-data:
